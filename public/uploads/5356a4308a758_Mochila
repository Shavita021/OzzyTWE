1
4 16
40 2
30 5
50 10
10 5

1
3 20
48 8
55 11
70 10

1
4 10
32 4
30 6
14 2
10 1

/*
*
*   Angel Torquemada Vazquez    A00803195
*   Juan Paulo Lara             A00999823
*
*/

#include <iostream>
#include <iomanip>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <limits.h>

using namespace std;


class nodo
{
public:

    int valor;
    int peso;
    double vsp;

    const double getVsp()
    {
        return vsp;
    }

    const int getPeso()
    {
        return peso;
    }

    const int getValor()
    {
        return valor;
    }

    void setValor(int va)
    {
        valor=va;
    }

    void setPeso(int pe)
    {
        peso=pe;
    }

    void setVsp(double vs)
    {
        vsp=vs;
    }

};

nodo arr[51];
int cont=0;
int valorOptimo=0;

void intercambio(nodo arreglo[],int longitud)
{
    for(int i=1; i<=longitud; i++)
    {
        for(int j=i+1; j<=longitud; j++)
        {
            if(arreglo[i].getVsp()<arreglo[j].getVsp())
            {
                nodo aux=arreglo[i];
                arreglo[i]=arreglo[j];
                arreglo[j]=aux;
            }
        }
    }
}

int valorPosible(int k,int acum,int capacidad,int nobjetos){
    int sol=0;
    for(int i=k;i<=nobjetos;i++){
        if(arr[i].getPeso()<=capacidad){
        // cout<<arr[i].getPeso()<<" ";
            sol += arr[i].getValor();
            capacidad -= arr[i].getPeso();
        }else{
            sol += arr[i].getVsp()*capacidad;
        }
    }
    return sol+acum;
}

void mochila(int k, int capacidad, int valorAcum, int nobjetos)
{
    cont++;
    //cout<<" "<<valorAcum;
    //cout<<" "<<valorOptimo;
    for(int i = k; i <= nobjetos; i++)
    {
        int vp=valorPosible(i,valorAcum,capacidad,nobjetos);
            cout<<"Cont: "<<cont<<"\n"<<" Valor k: "<<k<<"\n"<<" Valor i: "<<i<<"\n"<<" Valor Acum: "<<valorAcum<<"\n"<<" Valor Posible: "<<vp<<"\n"<<" Valor Optimo: "<<valorOptimo<<"\n";
        if((arr[i].getPeso() <= capacidad) && vp > valorOptimo)
        {

            if(valorAcum + arr[i].getValor() > valorOptimo)
            {
                valorOptimo = valorAcum + arr[i].getValor();
            }
            if(i<nobjetos)
                mochila(i+1, capacidad - arr[i].getPeso(), valorAcum + arr[i].getValor(),nobjetos);

            //comparación con la mejor solución
        }else{
		}	
    }
}


int main(int nNumberofArgs, char* pszArgs[])
{


    int casos;

    cin>>casos;

    for(int c=0; c<casos; c++)
    {
        int nobjetos, tmochila, valor, peso;
        double vsp;

        cin>>nobjetos;
        cin>>tmochila;

        for(int o=1; o<=nobjetos; o++)
        {

            cin>>valor;
            cin>>peso;
            vsp=valor/peso;

            nodo Nodo;
            Nodo.setValor(valor);
            Nodo.setPeso(peso);
            Nodo.setVsp(vsp);

            arr[o]=Nodo;

        }

        intercambio(arr,nobjetos);

        nodo Nodo;
        Nodo.setValor(0);
        Nodo.setPeso(0);
        Nodo.setVsp(0);
        arr[0]=Nodo;

        mochila(0, tmochila, 0, nobjetos);

        cout<<endl;

        cout<<"El valor optimo es "<<valorOptimo<<endl;

        cout<<cont<<endl;
        

        //cout<<valorPosible(0,0,tmochila,nobjetos) <<endl;

        for(int i=0; i<=nobjetos; i++)
        {
            cout<<arr[i].getVsp()<<" ";
        }


    }


}
